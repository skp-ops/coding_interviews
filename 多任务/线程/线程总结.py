'''

线程总结

'''
'''
对于有线程系统
    进程是资源分配的独立单位
    线程是资源调度的独立单位

对于无线程系统：
    进程是资源调度、分配的独立单位
    
线程之间的通信方式
    锁机制：包括互斥锁/量（mutex）、读写锁（reader-writer lock）、自旋锁（spin lock）、条件变量（condition）
        互斥锁/量（mutex）：提供了以排他方式防止数据结构被并发修改的方法。
        读写锁（reader-writer lock）：允许多个线程同时读共享数据，而对写操作是互斥的。
        自旋锁（spin lock）与互斥锁类似，都是为了保护共享资源。
        互斥锁是当资源被占用，申请者进入睡眠状态；而自旋锁则循环检测保持者是否已经释放锁。
        条件变量（condition）：可以以原子的方式阻塞进程，直到某个特定条件为真为止。
            对条件的测试是在互斥锁的保护下进行的。条件变量始终与互斥锁一起使用。
    信号量机制(Semaphore)
        无名线程信号量
        命名线程信号量
    信号机制(Signal)：类似进程间的信号处理
    屏障（barrier）：屏障允许每个线程等待，直到所有的合作线程都达到某一点，然后从该点继续执行。
    
线程间的通信目的主要是用于线程同步，所以线程没有像进程通信中的用于数据交换的通信机制


线程之间私有和共享的资源
    私有：线程栈，寄存器，程序计数器
    共享：堆，地址空间，全局变量，静态变量
    
选择
    需要频繁创建销毁的优先用线程
    需要进行大量计算的优先使用线程
    强相关的处理用线程，弱相关的处理用进程
    可能要扩展到多机分布的用进程，多核分布的用线程
    都满足需求的情况下，用你最熟悉、最拿手的方式
'''
